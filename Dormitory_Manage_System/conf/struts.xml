<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>

	<!-- 配置 Struts2 可以受理的请求的扩展名 -->
	<constant name="struts.action.extension" value="action,do,"></constant> 

    <constant name="struts.enable.DynamicMethodInvocation" value="false" />
    <constant name="struts.devMode" value="true" />
    <constant name="struts.action.excludePattern" value="/static/.*?" />
	
	
	<!-- 设置浏览器是否缓存静态内容,默认值为true(生产环境下使用),开发阶段最好关闭 -->
    <constant name="struts.serve.static.browserCache" value="false" />
    
    <!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开 -->
    <constant name="struts.configuration.xml.reload" value="true" />
    
    <!-- 开发模式下使用,这样可以打印出更详细的错误信息 -->
    <constant name="struts.devMode" value="true" />

    <package name="default" namespace="/" extends="struts-default">
    
		<!-- 自定义拦截器栈  -->
		<interceptors>
			
			<!-- 自定义管理员需要登录的拦截器 -->
			<interceptor name="adminLoginInterceptor" 
				class="com.wt.interceptor.AdminLoginInterceptor">
			</interceptor>
		
		</interceptors>
		
		<!-- 定义全局Result -->  
        <global-results>  
            <!-- 当返回adminLogin视图名时，转入管理员登录页面 -->  
            <result name="adminLogin">/WEB-INF/admin/admin_login.jsp</result> 
        </global-results>  
        
        
        <!-- 以下为首页中链接的跳转  -->
    	<!-- 宿舍信息查询链接跳转 -->
    	<action name="dormitoryPage" class="com.wt.action.DormitoryAction"
			    method="dormitoryList">
			<result name="dormitoryList">/WEB-INF/dormitory/dormitory_info.jsp</result>
		</action>
		
		<!-- 学生信息查询链接跳转 -->
    	<action name="studentPage" class="com.wt.action.StudentAction"
			    method="studentList">
			<result name="studentList">/WEB-INF/student/student_info.jsp</result>
		</action>
    
    
    	<!-- 以下为管理员部分的链接配置 -->
		
		<!-- 跳转到管理员页面  -->
		<action name="adminPage" class="com.wt.action.AdminAction"
			    method="adminDormitoryList">
			<result name="adminDormitoryList">/WEB-INF/admin/admin_index.jsp</result>
			
			<!-- 使用自定义管理员需要登录的拦截器 -->  
            <interceptor-ref name="adminLoginInterceptor" />  
		</action>
		
		<action name="dormitoryDetele" class="com.wt.action.AdminAction"
			method="dormitoryDetele">
			<result name="dormitoryDetele" type="stream">
		        <param name="contentType">text/html</param>
		        <param name="inputName">inputStream</param>
		    </result>
		</action>
		
		<!-- 添加新的宿舍的链接 -->
    	<action name="addNewDormitoryPage">
			<result>/WEB-INF/admin/add_newDormitory.jsp</result>
		</action>
		
		
    </package>
    
    
   	<!-- 以下为 json 数据的相关配置 -->
    <package name="json" extends="json-default" namespace="/">

    	<!-- 以下为管理员登录时的json数据的配置 -->
    	<action name="jsonAdminLogin" class="com.wt.jsonHandle.AdminLoginJsonHandle"
				method="jsonAdminLogin">
            <!-- 此处将reslut的值返回给客户端，root的值对应要返回的值的属性result
                                                   注意：root为固定写法，否则不会把result的值返回给客户端 -->
			<result type="json">
				<param name="root">dataMap</param>
			</result>
		</action>
		
		<!-- 以下为宿舍注册时的json数据的配置 -->
		<action name="add_newDormitory" class="com.wt.jsonHandle.DormitoryJsonHandle"
				method="add_newDormitory">
            <!-- 此处将reslut的值返回给客户端，root的值对应要返回的值的属性result
                                                   注意：root为固定写法，否则不会把result的值返回给客户端 -->
			<result type="json">
				<param name="root">dataMap</param>
			</result>
		</action>
    	
    </package>

</struts>
